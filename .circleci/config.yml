version: 2
jobs:
  build:
    docker:
        - image: nearform/docker_circleci:0.0.13
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
            docker_layer_caching: true

      - run:
          name: Configure
          command: |
            if [[ -z OS || -z $VERSION || -z $V8 || -z $NPM || -z $TAG ]]; then
                echo 'one or more variables are undefined, assuming build script debug mode'
                echo "export VERSION=10.0.0" >> $BASH_ENV
                echo "export OS=centos7" >> $BASH_ENV
                echo "export V8=6.6.346.24" >> $BASH_ENV
                echo "export NPM=5.6.0" >> $BASH_ENV
                echo "export TAG=test-only" >> $BASH_ENV
                echo "export PREBUILT=true" >> $BASH_ENV
                export OS=centos7 && source contrib/etc/util.sh
                echo "export FROM_DATA=\"$(getBaseImageForOs)\"" >> $BASH_ENV
            else
                source contrib/etc/util.sh
                if osSupported ${OS}; then
                    echo ...
                    echo "export FROM_DATA=\"$(getBaseImageForOs)\"" >> $BASH_ENV
                else
                    echo "Unsupported os: $OS"
                    exit 1
                fi
            fi
            # cat $BASH_ENV

      - run:
          name: Install and configure treasury-cli
          command: |
            sudo mkdir /opt/treasury-cli && sudo wget -O /opt/treasury-cli/treasury-cli https://s3.amazonaws.com/treasury-cli/treasury-cli_v0.0.2
            sudo chmod +x /opt/treasury-cli/treasury-cli

      - run:
          name: Info
          command: |
            mage showConfig
      - run:
          name: Install Sources
          command: |
            mage installSources
      - run:
          name: Build
          command: |
            mage build
      - run:
          name: Archive
          command: |
            if [ "$OS" == "rhel7" ]; then
                mage archive
            else
                echo "OS is not [rhel7] not archiving"
            fi
      - run:
          name: Upload
          command: |
            if [ "$OS" == "rhel7" ]; then
                echo "access_key = $AWS_ACCESS_KEY_ID" >> ~/.s3cfg
                echo "secret_key = $AWS_SECRET_ACCESS_KEY" >> ~/.s3cfg
                mage upload
            else
                echo "OS is not [rhel7] not uploading"
            fi
      - run:
          name: Docker squash
          command: |
            mage squash
      - run:
          name: Test
          command: |
            mage test
      - run:
          name: Scan the image and publish it to Docker Hub
          command: |
            if [ "$OS" == "rhel7" ]; then
                echo "OS is [rhel7] not publishing to Docker Hub"
            else
                export EXTERNAL_HOST=${DOCKER_ENDPOINT}
                export EXTERNAL_USER=${DOCKER_USER}
                export EXTERNAL_PASS=${DOCKER_PASS}
                mage scan
                mage publish
            fi
      - run:
          name: Scan the image and publish to the Red Hat Catalog
          command: |
            if [ "$OS" == "rhel7" ]; then
                source contrib/etc/util.sh
                if ! isDebug && shouldPublish; then
                    export RH_SECRET=$(getProjectSecret)
                    export RH_ENDPOINT="scan.connect.redhat.com"
                    export RH_PROJECT=$(getProjectId)
                    export EXTERNAL_HOST=${TREASURY_HOST}
                    export EXTERNAL_USER=${TREASURY_USER}
                    export EXTERNAL_PASS=${TREASURY_PASS}
                    mage scan
                    mage publishRedHat
                fi
            else
                echo "OS is not [rhel7] not publishing to Red Hat Catalog"
            fi

